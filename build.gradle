/*
 *    Copyright 2018 Duncan Sterken
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

plugins {
    id 'java'
    id 'idea'
    id 'maven-publish'
    id 'de.fuerstenau.buildconfig' version '1.1.8'
}

group = "me.duncte123"
archivesBaseName = "weebJava"
version = "1.2.0"

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    jcenter()
}

dependencies {
    compile group: 'com.afollestad', name: 'ason', version: '1.4.16'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.1'
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.9.1'
    compile( group: 'com.github.natanbc', name: 'reliqua', version: '1.2' ) {
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }
}

javadoc {
    failOnError = false
    options.memberLevel = JavadocMemberLevel.PUBLIC
    options.author()
    options.encoding = 'UTF-8'
    options.addStringOption('-html5')
    exclude('me/duncte123/weebJava/models/impl')
    exclude('me/duncte123/weebJava/models/impl/image')
    exclude('me/duncte123/weebJava/models/impl/image/response')
    exclude('me/duncte123/weebJava/web')
}

buildConfig {
    appName = project.name
    version = project.version
    packageName = project.group + "." + project.archivesBaseName
    charset = 'UTF-8'

    clsName = 'WeebInfo'
}

compileJava {
    options.encoding = 'UTF-8'
}

jar {
    classifier = "jar"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.output
    from sourceSets.main.allSource
    classifier = null
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        MavenProject(MavenPublication) {
            from components.java
            groupId group
            artifactId archivesBaseName
            version = version

            artifact javadocJar
            artifact sourcesJar
        }
    }
}

publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}


build {
    dependsOn clean
    dependsOn jar
    dependsOn javadocJar
    dependsOn sourcesJar
    dependsOn publish

    jar.mustRunAfter clean
    javadocJar.mustRunAfter jar
    sourcesJar.mustRunAfter javadocJar
    publish.mustRunAfter sourcesJar
}

